from Crypto.PublicKey import RSA
from fractions import gcd
import gmpy2
import base64

def prime_factors(n):
    """Returns all the prime factors of a positive integer"""
    factors = []
    d = 2
    while n > 1:
        while n % d == 0:
            factors.append(d)
            n /= d
        d = d + 1

    return factors




N1 = 30103591764648713827674760376121242270926701285601759752757622016313594668961490885168850733090110468527948935985993796108452779307826103188670164291857590471558713232756053050911423612587298448890926171012558056291310617227411012359105758443288922508308873393605533796404394602425969906385268815960675343850294717278661628190566092489922432250243626927333837610479196880389619028774974561422818552705385084490782363960047993119099768985024144255560331367293167836770281765512722462416930997720621400104950547665179616326759965255854215901813352964219118910355066673616350508795816470919097835937056205741345040726073

print prime_factors(N1)


e1 = 23327726251786044391936648292839024146595570048812611847624416250567688593345991832899021739083633707931968367156418190899541789343695389214035656198940443694084863357891182940631262956610000834594411211315758491456537944164084910491343406970745522710006109273603306488884410008378076931379206447782497243706369716697059256561725387615119884228589913593993645939129523478697412302154935380290501912673190621589740810804066077627474186070432986181561024447756012172820603306269258330506288920549332959574399518917092258727284222880210724633474583014251305405371011153335054425546173263137887788146305123305580077169057
e2 = 4505393555835504606487870826353282766163603740698895254878220113620334944012547967067346196688168599517385927564245132817559450218298676399015204234657803594840924155175294821072394320087632487687709335317959898359874909957941994999403653727363881399918781552049592188872962138057339546832307104572095689473998567852409918864081711504405440197625511675662540095802033995298543682105609580732329855045702269123756160569686958372885975253846349951912551718569579353235032931809290081407524752714630257325839455477203384063890663622162286535533581269758828577639540220463199561278767098004389426416442649173454758063593


ct1=4233044783802450767510854832467599383874984490928621837132491742730752724752217005532746733648982119481207263207347390650525959553847872807003926686123715379339258876048838155724211935776102657811236099147154738299091713377631319252508240697121761366168720623672314814953982154251538837799665259126745039953878777913954452155395985972826024405555776503526895775982469050309789192782301529758997539136610448593258839137156214543513151801258872192489526015814984748588363132713449038207356219433366058705329936845506047123529164055321864249063109235848259632543809737738985141716433577429535413292853463783353178989962
ct2=6075835535321081176504740063423401401650533753512763308733448998126590394070144825790771366929331177778331823915033447942242747244407385702930336446635360319066625175276824452578280030178806358496488156534302292070595419389497035149137639683404226073920908619709289347005720490482153763065128868337344006807657718638474597334786594641635091735773518724283414331096453527873344332247556211543193147484053411926197875104366421570855916508234629186088440627164364312313807365761919109514877454052921937157078484640987810540950600740665618950169895027751404829047430453105662938201430487721124744219263365815376241123868


p1 = gcd(N2,N1)
p2 = p1
q1= N1/p1
q2= N2/p2

r1=(p1-1)*(q1-1)
r2=(p2-1)*(q2-1)
print p1
#print q1
#print e1
#print r1

d1 = long(gmpy2.divm(1, e1, r1))
d2 = long(gmpy2.divm(1, e2, r2))

rsa1 = RSA.construct((N1,e1,d1,p1,q1))
pt1 = rsa1.decrypt(ct1)
print pt1

rsa2 = RSA.construct((N2,e2,d2,p2,q2))
pt2 = rsa2.decrypt(ct2)
print pt2